// selection-sort 2
// https://en.wikipedia.org/wiki/Selection_sort
// Initialize variables
0 n! 0 i! 0 j! 0 t! 0 m! 0 k!

// Helper function to swap elements
:W                      // W for sWap
    a i ? t!           // temp = a[i]
    a j ? a i ?!       // a[i] = a[j]
    t a j ?!           // a[j] = temp
;

// Main selection sort implementation
:S                      // S for Sort
    a /S n!            // get array size
    n 0 <= (           // if size <= 0
        `Invalid array size` /N
        /T             // exit
    )
    
    n 1 - k!          // k = size - 1
    /U (              // unlimited loop
        k 0 > /W      // while k > 0
        
        // Find minimum in remaining portion
        0 m!          // min_index = 0
        k 1 + (       // for each element
            /i i!     // current index
            a i ? a m ? < ( // if current < min
                i m!   // update min_index
            ) '
        )
        
        // Swap if needed
        m k = /F = (  // if min_index != k
            m i! k j! // prepare indices
            W        // swap elements
        )
        
        k 1 - k!     // decrease k
    )
;

// Print array helper
:D                      // D for Display
    `Array:` /N
    a /S (             // loop array size times
        a /i ? .       // print number
        ` `           // space
    ) /N
;

// Verify sort helper
:V                      // V for Verify
    `Verifying sort...` /N
    a /S 1 - (         // loop through array
        /i i!          // current position
        i 1 + j!       // next position
        a i ? a j ? > ( // if out of order
            `Sort failed at position ` i . /N
            /T         // exit
        ) ' '
    )
    `Sort verified successfully` /N
;

// Test function with original example
:T                      // T for Test
    // Test 1: Original example
    [ 9 5 3 1 8 6 4 2 7 0 ] a!
    `Test 1 - Original example` /N
    `Before:` /N
    D
    S
    `After:` /N
    D
    V /N

    // Test 2: Already sorted
    [ 0 1 2 3 4 5 6 7 8 9 ] a!
    `Test 2 - Already sorted` /N
    `Before:` /N
    D
    S
    `After:` /N
    D
    V /N

    // Test 3: Reverse sorted
    [ 9 8 7 6 5 4 3 2 1 0 ] a!
    `Test 3 - Reverse sorted` /N
    `Before:` /N
    D
    S
    `After:` /N
    D
    V /N

    // Test 4: With duplicates
    [ 5 2 8 2 1 5 3 1 ] a!
    `Test 4 - With duplicates` /N
    `Before:` /N
    D
    S
    `After:` /N
    D
    V /N
;

// Visualization with step tracking
:Z                      // Z for viZualize
    [ 6 4 2 8 1 3 ] a!
    `Selection Sort Visualization` /N
    `Initial array:` /N
    D
    
    n 1 - k!
